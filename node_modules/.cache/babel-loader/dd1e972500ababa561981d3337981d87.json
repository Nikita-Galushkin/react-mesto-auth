{"ast":null,"code":"var _jsxFileName = \"/Users/family/dev/react-mesto-auth/src/components/App.js\";\nimport React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport api from '../utils/api.js';\nimport * as auth from '../utils/auth.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const histoty = useHistory();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password).then(data => {\n      console.log(data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleRegister(email, password) {\n    auth.register(email, password).then(data => {\n      if (data) {\n        console.log(data);\n        setUserData({\n          email: data.email\n        });\n      }\n\n      setLoggedIn(true);\n      histoty.push('/');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link).then(link => {\n      setCurrentUser(link);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      const newArrCards = cards.filter(element => element !== card);\n      setCards(newArrCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card).then(card => {\n      setCards([...cards, card]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialsCards()]).then(([info, data]) => {\n      setCurrentUser(info);\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    loggedIn: loggedIn,\n    email: data.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    onEditAvatar: () => {\n      handleEditAvatarClick();\n    },\n    onEditProfile: () => {\n      handleEditProfileClick();\n    },\n    onAddPlace: () => {\n      handleAddPlaceClick();\n    },\n    onCardClick: card => {\n      handleCardClick(card);\n    },\n    cards: cards,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 51\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: 'confirm',\n    title: 'Вы уверены?',\n    text: 'Да',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/family/dev/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","useHistory","Header","Footer","Main","Login","Register","ImagePopup","PopupWithForm","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","api","auth","CurrentUserContext","App","loggedIn","setLoggedIn","useState","userData","setUserData","email","password","histoty","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","handleLogin","authorize","then","data","console","log","catch","err","error","handleRegister","register","push","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","info","setUserInfo","handleUpdateAvatar","link","setUserAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","removeCard","newArrCards","filter","element","handleAddPlaceSubmit","postCard","useEffect","Promise","all","getUserInfo","getInitialsCards"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport api from '../utils/api.js';\nimport * as auth from '../utils/auth.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const histoty = useHistory();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password)\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  }\n\n  function handleRegister(email, password) {\n    auth.register(email, password)\n      .then((data) => {\n        if(data) {\n          console.log(data);\n          setUserData({\n            email: data.email\n          });\n        }\n        setLoggedIn(true);\n        histoty.push('/');\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link)\n        .then((link) => {\n          setCurrentUser(link);\n          closeAllPopups();\n        })\n        .catch((err) => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        const newArrCards = cards.filter(element => element !== card);\n        setCards(newArrCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card)\n      .then((card) => {\n        setCards([...cards, card]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  React.useEffect(() => {\n    Promise.all([ api.getUserInfo(), api.getInitialsCards() ])\n      .then(([ info, data ]) => {\n        setCurrentUser(info);\n        setCards(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"page__container\">\n            <Header\n            loggedIn={loggedIn}\n            email={data.email}\n            />\n            <Switch>\n              <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\n                onEditAvatar={() => {\n                  handleEditAvatarClick();\n                }}\n                onEditProfile={() => {\n                  handleEditProfileClick();\n                }}\n                onAddPlace={() => {\n                  handleAddPlaceClick();\n                }}\n                onCardClick={(card) => {\n                  handleCardClick(card);\n                }}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n              <Route path='/signin'>\n                <Login \n                  onLogin={handleLogin}\n                />\n              </Route>\n              <Route path='/signup'>\n                <Register \n                  onRegister={handleRegister}\n                />\n              </Route>\n              <Route>\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signup\" />}\n              </Route>\n            </Switch>\n            <Footer />\n          </div>\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n          <PopupWithForm \n            name={'confirm'} \n            title={'Вы уверены?'} \n            text={'Да'} \n          />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} /> \n          <ImagePopup \n            card={selectedCard}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}