{"ast":null,"code":"var _jsxFileName = \"/Users/family/dev/react-mesto-auth/src/components/App.js\";\nimport React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport api from '../utils/api.js';\nimport * as auth from '../utils/auth.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleResponse(data) {\n    if (data) {\n      // localStorage.setItem('jwt', data.jwt);\n      setUserData({\n        email: data.email\n      });\n      setEmail(data.data.email);\n    }\n\n    setLoggedIn(true);\n    history.push('/');\n  }\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password).then(handleResponse).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleRegister(email, password) {\n    auth.register(email, password).then(handleResponse).catch(err => {\n      console.error(err);\n    });\n  } // function tokenCheck() {\n  //   const jwt = localStorage.getItem('jwt');\n  //   if (jwt) {\n  //     auth.getContent(jwt)\n  //       .then((res) => {\n  //         if (res.email){\n  //           setUserData({\n  //             email: res.email\n  //           });\n  //           setEmail(res.data.email);\n  //           }\n  //           setLoggedIn(true);\n  //           history.push('/');\n  //       })\n  //       .catch((err) => {\n  //         console.error(err);\n  //       });\n  //   }\n  // }\n  // React.useEffect(() => {\n  //   tokenCheck();\n  // }, []);\n\n\n  function handleLogout() {\n    setLoggedIn(false); // localStorage.removeItem('jwt');\n\n    setEmail('');\n    history.push('/signin');\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link).then(link => {\n      setCurrentUser(link);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      const newArrCards = cards.filter(element => element !== card);\n      setCards(newArrCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card).then(card => {\n      setCards([...cards, card]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialsCards()]).then(([info, data]) => {\n      setCurrentUser(info);\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    loggedIn: loggedIn,\n    email: email,\n    onLut: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    onEditAvatar: () => {\n      handleEditAvatarClick();\n    },\n    onEditProfile: () => {\n      handleEditProfileClick();\n    },\n    onAddPlace: () => {\n      handleAddPlaceClick();\n    },\n    onCardClick: card => {\n      handleCardClick(card);\n    },\n    cards: cards,\n    onCardLike: handleCardLike,\n    onCardDelete: handleCardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    onLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 51\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    name: 'confirm',\n    title: 'Вы уверены?',\n    text: 'Да',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isImagePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/family/dev/react-mesto-auth/src/components/App.js"],"names":["React","Redirect","Route","Switch","useHistory","Header","Footer","Main","Login","Register","ImagePopup","PopupWithForm","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","api","auth","CurrentUserContext","App","loggedIn","setLoggedIn","useState","email","setEmail","userData","setUserData","password","history","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","handleResponse","data","push","handleLogin","authorize","then","catch","err","console","error","handleRegister","register","handleLogout","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","info","setUserInfo","log","handleUpdateAvatar","link","setUserAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","removeCard","newArrCards","filter","element","handleAddPlaceSubmit","postCard","useEffect","Promise","all","getUserInfo","getInitialsCards"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport ImagePopup from './ImagePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport api from '../utils/api.js';\nimport * as auth from '../utils/auth.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [userData, setUserData] = React.useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleResponse(data) {\n    if(data) {\n      // localStorage.setItem('jwt', data.jwt);\n      setUserData({\n        email: data.email\n      });\n      setEmail(data.data.email);\n    }\n    setLoggedIn(true);\n    history.push('/');\n  }\n\n  function handleLogin(email, password) {\n    auth.authorize(email, password)\n      .then(handleResponse)\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function handleRegister(email, password) {\n    auth.register(email, password)\n      .then(handleResponse)\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  // function tokenCheck() {\n  //   const jwt = localStorage.getItem('jwt');\n  //   if (jwt) {\n  //     auth.getContent(jwt)\n  //       .then((res) => {\n  //         if (res.email){\n  //           setUserData({\n  //             email: res.email\n  //           });\n  //           setEmail(res.data.email);\n  //           }\n  //           setLoggedIn(true);\n  //           history.push('/');\n  //       })\n  //       .catch((err) => {\n  //         console.error(err);\n  //       });\n  //   }\n  // }\n\n  // React.useEffect(() => {\n  //   tokenCheck();\n  // }, []);\n\n  function handleLogout() {\n    setLoggedIn(false);\n    // localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/signin');\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleUpdateUser(info) {\n    api.setUserInfo(info)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.setUserAvatar(link)\n        .then((link) => {\n          setCurrentUser(link);\n          closeAllPopups();\n        })\n        .catch((err) => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        const newArrCards = cards.filter(element => element !== card);\n        setCards(newArrCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.postCard(card)\n      .then((card) => {\n        setCards([...cards, card]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  React.useEffect(() => {\n    Promise.all([ api.getUserInfo(), api.getInitialsCards() ])\n      .then(([ info, data ]) => {\n        setCurrentUser(info);\n        setCards(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <div className=\"page__container\">\n            <Header\n            loggedIn={loggedIn}\n            email={email}\n            onLut={handleLogout}\n            />\n            <Switch>\n              <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main}\n                onEditAvatar={() => {\n                  handleEditAvatarClick();\n                }}\n                onEditProfile={() => {\n                  handleEditProfileClick();\n                }}\n                onAddPlace={() => {\n                  handleAddPlaceClick();\n                }}\n                onCardClick={(card) => {\n                  handleCardClick(card);\n                }}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n              />\n              <Route path='/signin'>\n                <Login \n                  onLogin={handleLogin}\n                />\n              </Route>\n              <Route path='/signup'>\n                <Register \n                  onRegister={handleRegister}\n                />\n              </Route>\n              <Route>\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signup\" />}\n              </Route>\n            </Switch>\n            <Footer />\n          </div>\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n          <PopupWithForm \n            name={'confirm'} \n            title={'Вы уверены?'} \n            text={'Да'} \n          />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} /> \n          <ImagePopup \n            card={selectedCard}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}